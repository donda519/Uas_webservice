{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"List\",\n  data() {\n    const checkNumeric = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('This blank cannot be empty'));\n      }\n      if (!/^[0-9]*$/.test(value)) {\n        callback(new Error('Please enter a numerical value'));\n      }\n      if (parseInt(value) < 0) {\n        callback(new Error('Please enter a number larger than 0'));\n      }\n      callback();\n    };\n    return {\n      tableData: [],\n      total: 0,\n      form: {},\n      dialogFormVisible: false,\n      formLabelWidth: '200px',\n      params: {\n        draw: 1,\n        start: 0,\n        length: 10,\n        email: '',\n        name: ''\n      },\n      rules: {\n        charge: [{\n          required: true,\n          validator: checkNumeric,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    load() {\n      request.get('api/member', {\n        params: this.params\n      }).then(res => {\n        if (res.success) {\n          this.tableData = res.data.original.data;\n          this.total = res.data.original.recordsTotal;\n          console.log(this.tableData);\n        }\n      });\n    },\n    del(id) {\n      request.delete('api/member/' + id).then(res => {\n        if (res.code == '200') {\n          this.$notify.success('Deleted');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    //encapsule() {\n    //  let url = 'http://localhost:9090/user/page'\n    //  let params = this.params\n    //\n    //  url = url + '?pageNum=' + params.pageNum\n    //  url = url + '&pageSize=' + params.pageSize\n    //  url = url + '&email=' + params.email\n    //  url = url + '&uid=' + params.uid\n    //\n    //  // console.log(url)\n    //  return url\n    //},\n\n    reset() {\n      this.params = {\n        draw: 1,\n        start: 0,\n        length: 10,\n        email: '',\n        name: ''\n      };\n      this.value = '';\n      this.load();\n    },\n    changePageNum(pageNum) {\n      this.params.pageNum = pageNum;\n      this.load();\n    },\n    chargeOpen(row) {\n      this.dialogFormVisible = true;\n      this.form = row;\n    },\n    cancel() {\n      this.dialogFormVisible = false;\n      this.$refs['ruleForm'].resetFields();\n    },\n    chargeUser() {\n      request.post(\"/user/charge\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Success');\n          this.$refs['ruleForm'].resetFields();\n          this.dialogFormVisible = false;\n          location.reload(); // refresh page\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    changeStatus(row) {\n      // console.log(row)\n      request.put('user/update', row).then(res => {\n        if (res.code === '200') {\n          this.$notify.success('Status updated');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAgFA;AAEA;EACAA;EAEAC;IACA;MACA;QACAC;MACA;MACA;QACAA;MACA;MACA;QACAA;MACA;MACAA;IACA;IAEA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACAC;QACAC;QACAC;QACAC;QACAZ;MACA;MACAa;QACAC;UAAAC;UAAAC;UAAAC;QAAA;MACA;IACA;EACA;EAEAC;IACA;EACA;EAEAC;IACAC;MACAC;QACAb;MACA;QACA;UACA;UACA;UACAc;QACA;MACA;IACA;IAEAC;MACAF;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEAG;MACA;QACAf;QACAC;QACAC;QACAC;QACAZ;MACA;MACA;MACA;IACA;IAEAyB;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACAP;QACA;UACA;UACA;UACA;UACAQ;QACA;UACA;QACA;MACA;IACA;IAEAC;MACA;MACAT;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","callback","tableData","total","form","dialogFormVisible","formLabelWidth","params","draw","start","length","email","rules","charge","required","validator","trigger","created","methods","load","request","console","del","reset","changePageNum","chargeOpen","cancel","chargeUser","location","changeStatus"],"sourceRoot":"src/views/user","sources":["List.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- search area -->\r\n    <div style=\"margin-bottom: 2px; margin-top: 2px\">\r\n      <!-- <el-input v-model=\"params.email\" placeholder=\"Enter member email\" style=\"width: 200px; margin-left: 2px\"></el-input> -->\r\n      <el-input v-model=\"params.search\" placeholder=\"Enter member name\" style=\"width: 200px; margin-left: 2px\"></el-input>\r\n      <el-button type=\"primary\" style=\"margin-left: 2px; height: 40px\" icon=\"el-icon-search\" @click=\"load\">Search</el-button>\r\n      <el-button type=\"warning\" style=\"margin-left: 2px; height: 40px\" icon=\"el-icon-refresh-right\" @click=\"reset\">Reset</el-button>\r\n    </div>\r\n    <!-- table area -->\r\n    <div>\r\n      <el-table :data=\"tableData\" style=\"width: 100%\" stripe>\r\n        <!-- <el-table-column prop=\"status\" label=\"Status\" width=\"80\">\r\n          <template v-slot=\"scope2\">\r\n            <el-switch\r\n                v-model=\"scope2.row.status\"\r\n                active-color=\"#13ce66\"\r\n                inactive-color=\"#ff4949\"\r\n                @change=\"changeStatus(scope2.row)\">\r\n            </el-switch>\r\n          </template>\r\n        </el-table-column> -->\r\n        <el-table-column prop=\"id\" label=\"User ID\" show-overflow-tooltip width=\"80\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"Name\" show-overflow-tooltip width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"gender\" label=\"Jenis Kelamin\" width=\"110\"></el-table-column>\r\n        <el-table-column prop=\"email\" label=\"Email\" show-overflow-tooltip width=\"150\"></el-table-column>\r\n        <el-table-column prop=\"phone_number\" label=\"Phone\" width=\"110\"></el-table-column>\r\n        <el-table-column prop=\"address\" label=\"Alamat\" show-overflow-tooltip width=\"100\"></el-table-column>\r\n        <el-table-column prop=\"created_at\" label=\"Create Date\" width=\"180\"></el-table-column>\r\n        <!-- <el-table-column prop=\"updated_at\" label=\"Update Date\" width=\"120\"></el-table-column> -->\r\n        <el-table-column fixed=\"right\" label=\"Operations\" width=\"265\">\r\n          <template v-slot=\"scope\">\r\n            <!-- <el-button type=\"success\" @click=\"chargeOpen(scope.row)\">Reharge</el-button> -->\r\n            <el-button type=\"primary\" style=\"margin-left: 2px;\" @click=\"$router.push('/editUser?id=' + scope.row.id)\">Edit</el-button>\r\n            <el-popconfirm\r\n                confirm-button-text='Yes'\r\n                cancel-button-text='No'\r\n                title=\"Are you sure you want to delete this row of dataï¼Ÿ\"\r\n                @confirm=\"del(scope.row.id)\"\r\n            >\r\n              <el-button style=\"margin-left: 2px;\" slot=\"reference\" type=\"danger\">Delete</el-button>\r\n            </el-popconfirm>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- charge up user account -->\r\n      <el-dialog style=\"text-align: center\" :visible.sync=\"dialogFormVisible\">\r\n        <div style=\"font-size: 30px; font-family: Arial; font-weight: bold\">Charge Up User's Account</div>\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" style=\"margin-top: 15px; width: 80vh;\">\r\n          <el-form-item label=\"User email: \" :label-width=\"formLabelWidth\" prop=\"name\">\r\n            <el-input v-model=\"form.email\" disabled autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Current credit: \" :label-width=\"formLabelWidth\" prop=\"name\">\r\n            <el-input v-model=\"form.acredit\" disabled autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Charge amount: \" :label-width=\"formLabelWidth\" prop=\"charge\">\r\n            <el-input v-model=\"form.charge\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n        </el-form>\r\n        <!-- buttons -->\r\n        <div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center; margin-top: -40px\">\r\n          <el-button type=\"primary\" @click=\"chargeUser\">Confirm</el-button>\r\n          <el-button type=\"warning\" @click=\"cancel\">Cancel</el-button>\r\n        </div>\r\n      </el-dialog>\r\n      <!-- page -->\r\n      <el-pagination\r\n          style=\"margin-top: 5px;\"\r\n          background\r\n          :current-page=\"params.pageNum\"\r\n          :page-size=\"params.pageSize\"\r\n          @current-change=\"changePageNum\"\r\n          layout=\"prev, pager, next\"\r\n          :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"List\",\r\n\r\n  data() {\r\n    const checkNumeric = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('This blank cannot be empty'));\r\n      }\r\n      if(!/^[0-9]*$/.test(value)) {\r\n        callback(new Error('Please enter a numerical value'))\r\n      }\r\n      if(parseInt(value) < 0) {\r\n        callback(new Error('Please enter a number larger than 0'))\r\n      }\r\n      callback()\r\n    }\r\n\r\n    return {\r\n      tableData: [],\r\n      total: 0,\r\n      form: {},\r\n      dialogFormVisible: false,\r\n      formLabelWidth: '200px',\r\n      params: {\r\n        draw: 1,\r\n        start: 0,\r\n        length: 10,\r\n        email: '',\r\n        name: '',\r\n      },\r\n      rules: {\r\n        charge: [{ required: true,  validator: checkNumeric, trigger: 'blur' }],\r\n      }\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.load()\r\n  },\r\n\r\n  methods: {\r\n    load() {\r\n      request.get('api/member', {\r\n        params: this.params\r\n      }).then(res => {\r\n        if(res.success) {\r\n          this.tableData = res.data.original.data\r\n          this.total = res.data.original.recordsTotal\r\n          console.log(this.tableData);\r\n        }\r\n      })\r\n    },\r\n\r\n    del(id) {\r\n      request.delete('api/member/' + id).then(res => {\r\n            if(res.code == '200') {\r\n              this.$notify.success('Deleted')\r\n              this.load()\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n      })\r\n    },\r\n\r\n    //encapsule() {\r\n    //  let url = 'http://localhost:9090/user/page'\r\n    //  let params = this.params\r\n//\r\n    //  url = url + '?pageNum=' + params.pageNum\r\n    //  url = url + '&pageSize=' + params.pageSize\r\n    //  url = url + '&email=' + params.email\r\n    //  url = url + '&uid=' + params.uid\r\n//\r\n    //  // console.log(url)\r\n    //  return url\r\n    //},\r\n\r\n    reset() {\r\n      this.params = {\r\n        draw: 1,\r\n        start: 0,\r\n        length: 10,\r\n        email: '',\r\n        name: '',\r\n      }\r\n      this.value = ''\r\n      this.load()\r\n    },\r\n\r\n    changePageNum(pageNum) {\r\n      this.params.pageNum = pageNum\r\n      this.load()\r\n    },\r\n\r\n    chargeOpen(row) {\r\n      this.dialogFormVisible = true\r\n      this.form = row\r\n    },\r\n\r\n    cancel() {\r\n      this.dialogFormVisible = false\r\n      this.$refs['ruleForm'].resetFields()\r\n    },\r\n\r\n    chargeUser() {\r\n      request.post(\"/user/charge\", this.form).then(res => {\r\n        if(res.code === '200') {\r\n          this.$notify.success('Success')\r\n          this.$refs['ruleForm'].resetFields()\r\n          this.dialogFormVisible = false\r\n          location.reload() // refresh page\r\n        } else {\r\n          this.$notify.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    changeStatus(row) {\r\n      // console.log(row)\r\n      request.put('user/update', row).then(res => {\r\n        if(res.code === '200') {\r\n          this.$notify.success('Status updated')\r\n          this.load()\r\n        } else {\r\n          this.$notify.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}