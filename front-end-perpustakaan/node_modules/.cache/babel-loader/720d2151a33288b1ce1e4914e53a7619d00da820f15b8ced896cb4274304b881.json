{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"List\",\n  data() {\n    return {\n      total: 0,\n      dialogFormVisible: false,\n      form: {},\n      pid: null,\n      rules: {\n        name: [{\n          required: true,\n          message: \"Category name must not be empty\",\n          trigger: 'blur'\n        }],\n        remark: [{\n          required: true,\n          message: \"Remark must not be empty\",\n          trigger: 'blur'\n        }]\n      },\n      formLabelWidth: '200px',\n      tableData: [],\n      params: {\n        draw: 1,\n        start: 0,\n        length: 10,\n        name: ''\n      }\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    del(id) {\n      request.delete('api/category/' + id).then(res => {\n        if (res.code == '200') {\n          this.$notify.success('Deleted');\n          this.load();\n        } else {\n          this.$notify.error(res.msg);\n        }\n      });\n    },\n    load() {\n      request.get(\"api/category\", {\n        params: this.params\n      }).then(res => {\n        if (res.success) {\n          this.tableData = res.data.original.data;\n          this.total = res.data.original.recordsTotal;\n        }\n      });\n    },\n    addChild(row) {\n      this.pid = row.id;\n      this.dialogFormVisible = true;\n    },\n    reset() {\n      this.params = {\n        draw: 1,\n        start: 0,\n        length: 10,\n        name: ''\n      };\n      this.load();\n    },\n    changePageNum(pageNum) {\n      this.params.pageNum = pageNum;\n      this.load();\n    },\n    cancel() {\n      this.dialogFormVisible = false;\n      this.$refs['ruleForm'].resetFields();\n    },\n    save() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.form.pid = this.pid;\n          request.post('category/save', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify.success('Submitted');\n              this.$refs['ruleForm'].resetFields();\n              this.dialogFormVisible = false;\n              location.reload();\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAgEA;AAEA;EACAA;EAEAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;QACAN;UAAAO;UAAAC;UAAAC;QAAA;QACAC;UAAAH;UAAAC;UAAAC;QAAA;MACA;MACAE;MACAC;MACAC;QACAC;QACAC;QACAC;QACAhB;MACA;IACA;EACA;EAEAiB;IACA;EACA;EAEAC;IACAC;MACAC;QACA;UACA;UACA;QACA;UACA;QACA;MACA;IACA;IAEAC;MACAD;QACAP;MACA;QACA;UACA;UACA;QACA;MACA;IACA;IAEAS;MACA;MACA;IACA;IAEAC;MACA;QACAT;QACAC;QACAC;QACAhB;MACA;MACA;IACA;IAEAwB;MACA;MACA;IACA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QACA;UACA;UACAN;YACA;cACA;cACA;cACA;cACAO;YACA;cACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","total","dialogFormVisible","form","pid","rules","required","message","trigger","remark","formLabelWidth","tableData","params","draw","start","length","created","methods","del","request","load","addChild","reset","changePageNum","cancel","save","location"],"sourceRoot":"src/views/category","sources":["List.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- search area -->\r\n    <div style=\"margin-bottom: 2px; margin-top: 2px\">\r\n      <el-input v-model=\"params.search\" placeholder=\"Enter category\" style=\"width: 200px; margin-left: 2px\"></el-input>\r\n      <el-button type=\"primary\" style=\"margin-left: 2px; height: 40px\" icon=\"el-icon-search\" @click=\"load\">Search</el-button>\r\n      <el-button type=\"warning\" style=\"margin-left: 2px; height: 40px\" icon=\"el-icon-refresh-right\" @click=\"reset\">Reset</el-button>\r\n    </div>\r\n    <!-- table area -->\r\n    <el-table :data=\"tableData\" row-key=\"id\" :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\" stripe>\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"100\"></el-table-column>\r\n      <el-table-column prop=\"name\" label=\"Category Name\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"created_at\" label=\"Create Date\"></el-table-column>\r\n      <el-table-column label=\"Operation\">\r\n        <template v-slot=\"scope\">\r\n          <!-- <el-button type=\"success\" v-if=\"!scope.row.pid\" @click=\"addChild(scope.row)\">\r\n            New Child Category\r\n          </el-button> -->\r\n          <el-button type=\"primary\" style=\"margin-left: 2px;\" @click=\"$router.push('/editCategory?id=' + scope.row.id)\">\r\n            Edit\r\n          </el-button>\r\n          <!-- delete -->\r\n          <el-popconfirm\r\n              confirm-button-text='Yes'\r\n              cancel-button-text='No'\r\n              title=\"Are you sure you want to delete this row of dataï¼Ÿ\"\r\n              @confirm=\"del(scope.row.id)\"\r\n          >\r\n            <el-button style=\"margin-left: 2px;\" slot=\"reference\" type=\"danger\">Delete</el-button>\r\n          </el-popconfirm>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- add child category -->\r\n    <el-dialog style=\"text-align: center\" :visible.sync=\"dialogFormVisible\">\r\n      <div style=\"font-size: 30px; font-family: Arial; font-weight: bold\">New Child Category</div>\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" style=\"margin-top: 5px; width: 80vh;\">\r\n        <el-form-item label=\"Category Name: \" :label-width=\"formLabelWidth\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Remark: \" :label-width=\"formLabelWidth\" prop=\"remark\">\r\n          <el-input v-model=\"form.remark\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- buttons -->\r\n      <div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center; margin-top: -40px\">\r\n        <el-button type=\"primary\" @click=\"save\">Confirm</el-button>\r\n        <el-button type=\"warning\" @click=\"cancel\">Cancel</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <!-- page -->\r\n    <el-pagination\r\n        style=\"margin-top: 5px;\"\r\n        background\r\n        :current-page=\"params.pageNum\"\r\n        :page-size=\"params.pageSize\"\r\n        @current-change=\"changePageNum\"\r\n        layout=\"prev, pager, next\"\r\n        :total=\"total\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"List\",\r\n\r\n  data() {\r\n    return {\r\n      total: 0,\r\n      dialogFormVisible: false,\r\n      form: {},\r\n      pid: null,\r\n      rules: {\r\n        name: [{ required: true, message: \"Category name must not be empty\", trigger: 'blur' }],\r\n        remark: [{ required: true, message: \"Remark must not be empty\", trigger: 'blur' }],\r\n      },\r\n      formLabelWidth: '200px',\r\n      tableData: [],\r\n      params: {\r\n        draw: 1,\r\n        start: 0,\r\n        length: 10,\r\n        name: '',\r\n      },\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.load()\r\n  },\r\n\r\n  methods: {\r\n    del(id) {\r\n      request.delete('api/category/' + id).then(res => {\r\n        if(res.code == '200') {\r\n          this.$notify.success('Deleted')\r\n          this.load()\r\n        } else {\r\n          this.$notify.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n\r\n    load() {\r\n      request.get(\"api/category\", {\r\n        params: this.params\r\n      }).then(res => {\r\n        if(res.success) {\r\n          this.tableData = res.data.original.data\r\n          this.total = res.data.original.recordsTotal\r\n        }\r\n      })\r\n    },\r\n\r\n    addChild(row) {\r\n      this.pid = row.id\r\n      this.dialogFormVisible = true\r\n    },\r\n\r\n    reset() {\r\n      this.params = {\r\n        draw: 1,\r\n        start: 0,\r\n        length: 10,\r\n        name: '',\r\n      }\r\n      this.load()\r\n    },\r\n\r\n    changePageNum(pageNum) {\r\n      this.params.pageNum = pageNum\r\n      this.load()\r\n    },\r\n\r\n    cancel() {\r\n      this.dialogFormVisible = false\r\n      this.$refs['ruleForm'].resetFields()\r\n    },\r\n\r\n    save() {\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if(valid) {\r\n          this.form.pid = this.pid\r\n          request.post('category/save', this.form).then(res => {\r\n            if(res.code === '200') {\r\n              this.$notify.success('Submitted')\r\n              this.$refs['ruleForm'].resetFields()\r\n              this.dialogFormVisible = false\r\n              location.reload()\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}