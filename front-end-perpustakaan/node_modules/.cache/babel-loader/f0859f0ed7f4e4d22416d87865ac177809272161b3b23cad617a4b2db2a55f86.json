{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from \"js-cookie\";\nimport request from \"@/utils/request\";\nexport default {\n  name: \"Layout\",\n  data() {\n    const checkConfirm = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error(\"Please enter new password again\"));\n      }\n      if (value != this.form.newPassword) {\n        callback(new Error(\"Please enter the correct new password\"));\n      }\n      callback();\n    };\n    return {\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')) : {},\n      dialogFormVisible: false,\n      formLabelWidth: '200px',\n      form: {},\n      rules: {\n        password: [{\n          required: true,\n          message: \"Original password cannot be empty\",\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: \"New password cannot be empty\",\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 30,\n          message: \"Password length must be 6-30\"\n        }],\n        confirmPassword: [{\n          required: true,\n          validator: checkConfirm,\n          trigger: 'blur'\n        }, {\n          min: 6,\n          max: 30,\n          message: \"Password length must be 6-30\"\n        }]\n      }\n    };\n  },\n  methods: {\n    logout() {\n      // data removal is required\n      request.post('api/logout').then(res => {\n        console.log(res);\n        if (res) {\n          Cookies.remove('admin');\n          this.$router.push('/login');\n        }\n      });\n    },\n    cancelChange() {\n      this.dialogFormVisible = false;\n      this.$refs['ruleForm'].resetFields();\n    },\n    changePass() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          this.form.email = this.admin.email; // get email\n          request.put('admin/changePass', this.form).then(res => {\n            if (res.code === '200') {\n              this.$notify(\"Updated\");\n              this.$refs['ruleForm'].resetFields();\n              this.dialogFormVisible = false;\n              // Cookies.remove('admin')\n              // this.$router.push('/login')\n            } else {\n              this.$notify(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AAsHA;AACA;AAEA;EACAA;EACAC;IACA;MACA;QACAC;MACA;MACA;QACAA;MACA;MACAA;IACA;IAEA;MACAC;MACAC;MACAC;MACAC;MAEAC;QACAC;UAAAC;UAAAC;UAAAC;QAAA;QACAC,cACA;UAAAH;UAAAC;UAAAC;QAAA,GACA;UAAAE;UAAAC;UAAAJ;QAAA,EACA;QACAK,kBACA;UAAAN;UAAAO;UAAAL;QAAA,GACA;UAAAE;UAAAC;UAAAJ;QAAA;MAEA;IACA;EACA;EAEAO;IACAC;MACA;MACAC;QACAC;QACA;UACAC;UACA;QACA;MACA;IAEA;IAEAC;MACA;MACA;IACA;IAEAC;MACA;QACA;UACA;UACAJ;YACA;cACA;cACA;cACA;cACA;cACA;YACA;cACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","callback","admin","dialogFormVisible","formLabelWidth","form","rules","password","required","message","trigger","newPassword","min","max","confirmPassword","validator","methods","logout","request","console","Cookies","cancelChange","changePass"],"sourceRoot":"src/views","sources":["Layout.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- header -->\r\n    <div style=\"height: 80px; line-height: 80px; background-color: white; width: 100%; margin-bottom: 2px; display: flex\">\r\n      <!-- logo and title -->\r\n      <div style=\"width: 800px\">\r\n        <img src=\"@/assets/logo.png\" alt=\"\" style=\"width: 50px; height: 50px; position: relative; top: 15px; left: 10px\">\r\n        <span style=\"margin-left: 20px; font-size: 40px; font-family: Arial\">MANAGEMENT PERPUS</span>\r\n      </div>\r\n      <!-- admins' info -->\r\n      <div style=\"flex: 1; text-align: right; margin-right: 40px\">\r\n        <el-dropdown style=\"cursor: pointer\">\r\n          <span class=\"el-dropdown-link\">\r\n            Welcome {{ admin.user.name }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n          </span>\r\n          <!-- dropdown -->\r\n          <el-dropdown-menu slot=\"dropdown\" style=\"margin-top: -15px; width: 150px; text-align: left\">\r\n            <!-- <el-dropdown-item><div @click=\"dialogFormVisible = true\">change password</div></el-dropdown-item> -->\r\n            <el-dropdown-item><div @click=\"logout\">logout</div></el-dropdown-item>\r\n          </el-dropdown-menu>\r\n        </el-dropdown>\r\n        <!-- change password -->\r\n        <el-dialog style=\"text-align: center\" :visible.sync=\"dialogFormVisible\">\r\n          <div style=\"font-size: 30px; font-family: Arial; font-weight: bold\">Change Password</div>\r\n          <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\" style=\"margin-top: 2px; width: 80vh;\">\r\n            <el-form-item label=\"Original Password: \" :label-width=\"formLabelWidth\" prop=\"password\">\r\n              <el-input v-model=\"form.password\" show-password autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"New Password: \" :label-width=\"formLabelWidth\" prop=\"newPassword\">\r\n              <el-input v-model=\"form.newPassword\" show-password autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Comfirm New Password: \" :label-width=\"formLabelWidth\" prop=\"confirmPassword\">\r\n              <el-input v-model=\"form.confirmPassword\" show-password autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n          <!-- buttons -->\r\n          <div slot=\"footer\" class=\"dialog-footer\" style=\"text-align: center; margin-top: -60px\">\r\n            <el-button type=\"primary\" @click=\"changePass\">Confirm</el-button>\r\n            <el-button type=\"warning\" @click=\"cancelChange\">Cancel</el-button>\r\n          </div>\r\n        </el-dialog>\r\n      </div>\r\n    </div>\r\n    <!-- side and main -->\r\n    <div style=\"display: flex\">\r\n      <!-- side -->\r\n      <div style=\"min-width: 230px; min-height: calc(100vh - 82px); height: 200px; overflow: hidden; margin-right: 2px;\r\n      background-color: white;\">\r\n        <el-menu :unique-opened=\"true\" :default-active=\"$route.path\" :default-opens=\"['user']\" router>\r\n          <el-menu-item index=\"/home\">\r\n            <i class=\"el-icon-s-data\"></i>\r\n            <span style=\"font-family: Arial; font-size: 15px;\">Homepage</span>\r\n          </el-menu-item>\r\n          <!-- users -->\r\n          <el-submenu index=\"user\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-user\"></i>\r\n              <span style=\"font-family: Arial; font-size: 15px;\">Members</span>\r\n            </template>\r\n            <el-menu-item index=\"/addUser\">New Member</el-menu-item>\r\n            <el-menu-item index=\"/userList\">Member List</el-menu-item>\r\n          </el-submenu>\r\n          <!-- admins -->\r\n          <!-- <el-submenu index=\"admin\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-user-solid\"></i>\r\n              <span style=\"font-family: Arial; font-size: 15px;\">Administrators</span>\r\n            </template>\r\n            <el-menu-item index=\"/addAdmin\">New Admin</el-menu-item>\r\n            <el-menu-item index=\"/adminList\">Admin List</el-menu-item>\r\n          </el-submenu> -->\r\n          <!-- category -->\r\n          <el-submenu index=\"category\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-s-fold\"></i>\r\n              <span style=\"font-family: Arial; font-size: 15px;\">Categories</span>\r\n            </template>\r\n            <el-menu-item index=\"/addCategory\">New Category</el-menu-item>\r\n            <el-menu-item index=\"/categoryList\">Category List</el-menu-item>\r\n          </el-submenu>\r\n          <!-- book -->\r\n          <el-submenu index=\"book\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-collection\"></i>\r\n              <span style=\"font-family: Arial; font-size: 15px;\">Books</span>\r\n            </template>\r\n            <el-menu-item index=\"/addBook\">Add New Book</el-menu-item>\r\n            <el-menu-item index=\"/BookList\">Book List</el-menu-item>\r\n          </el-submenu>\r\n          <!-- borrow -->\r\n          <el-submenu index=\"borrow\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-download\"></i>\r\n            <span style=\"font-family: Arial; font-size: 15px;\">Book Borrow</span>\r\n          </template>\r\n          <el-menu-item index=\"/addBorrow\">New Borrow Record</el-menu-item>\r\n          <el-menu-item index=\"/BorrowList\">Borrow Records</el-menu-item>\r\n          </el-submenu>\r\n          <!-- return -->\r\n          <el-submenu index=\"retern\">\r\n            <template slot=\"title\">\r\n              <i class=\"el-icon-upload2\"></i>\r\n              <span style=\"font-family: Arial; font-size: 15px;\">Book Return</span>\r\n            </template>\r\n            <el-menu-item index=\"/ReternList\">Return Records</el-menu-item>\r\n          </el-submenu>\r\n        </el-menu>\r\n      </div>\r\n      <!-- main -->\r\n      <div style=\"flex: 1; background-color: white; overflow-x: auto;\">\r\n        <router-view/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport Cookies from \"js-cookie\";\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Layout\",\r\n  data() {\r\n    const checkConfirm = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error(\"Please enter new password again\"))\r\n      }\r\n      if(value != this.form.newPassword) {\r\n        callback(new Error(\"Please enter the correct new password\"))\r\n      }\r\n      callback()\r\n    }\r\n\r\n    return {\r\n      admin: Cookies.get('admin') ? JSON.parse(Cookies.get('admin')): {},\r\n      dialogFormVisible: false,\r\n      formLabelWidth: '200px',\r\n      form: {},\r\n\r\n      rules: {\r\n        password: [{ required: true, message: \"Original password cannot be empty\", trigger: 'blur' }],\r\n        newPassword: [\r\n          { required: true, message: \"New password cannot be empty\", trigger: 'blur' },\r\n          { min: 6, max: 30, message: \"Password length must be 6-30\" }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, validator: checkConfirm, trigger: 'blur' },\r\n          { min: 6, max: 30, message: \"Password length must be 6-30\" }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    logout() {\r\n      // data removal is required\r\n      request.post('api/logout').then(res => {\r\n        console.log(res);\r\n            if(res) {\r\n              Cookies.remove('admin')\r\n              this.$router.push('/login')\r\n            }\r\n          })\r\n     \r\n    },\r\n\r\n    cancelChange() {\r\n      this.dialogFormVisible = false\r\n      this.$refs['ruleForm'].resetFields()\r\n    },\r\n\r\n    changePass() {\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if(valid) {\r\n          this.form.email = this.admin.email // get email\r\n          request.put('admin/changePass', this.form).then(res => {\r\n            if(res.code === '200') {\r\n              this.$notify(\"Updated\")\r\n              this.$refs['ruleForm'].resetFields()\r\n              this.dialogFormVisible = false\r\n              // Cookies.remove('admin')\r\n              // this.$router.push('/login')\r\n            } else {\r\n              this.$notify(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}