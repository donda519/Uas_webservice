{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: \"Add\",\n  data() {\n    const checkGender = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter gender'));\n      }\n      callback();\n    };\n    const checkEmail = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter the email address'));\n      }\n      if (!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(value)) {\n        callback(new Error('Illegal email address'));\n      }\n      callback();\n    };\n    const checkPhone = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error('Please enter the phone number'));\n      }\n      // if (!/^[1,2,3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\n      //   callback(new Error('Illegal phone number'));\n      // }\n      callback();\n    };\n    return {\n      form: {\n        gender: ''\n      },\n      options: [{\n        value: 'L',\n        label: 'Laki-laki'\n      }, {\n        value: 'P',\n        label: 'Perempuan'\n      }],\n      // rules to check the input values\n      rules: {\n        // cannot be empty\n        name: [{\n          required: true,\n          message: 'Please enter the name',\n          trigger: 'blur'\n        }],\n        address: [{\n          required: true,\n          message: 'Please enter the address',\n          trigger: 'blur'\n        }],\n        // more restrictions\n        gender: [{\n          required: true,\n          validator: checkGender,\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          validator: checkEmail,\n          trigger: 'blur'\n        }],\n        phone_number: [{\n          required: true,\n          validator: checkPhone,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    save() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (valid) {\n          request.post('api/member', this.form).then(res => {\n            if (res.code == '200') {\n              this.$notify.success('Submitted');\n              this.$refs['ruleForm'].resetFields();\n            } else {\n              this.$notify.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAyCA;AAEA;EACAA;EACAC;IACA;MACA;QACAC;MACA;MACAA;IACA;IAEA;MACA;QACAA;MACA;MACA;QACAA;MACA;MACAA;IACA;IAEA;MACA;QACAA;MACA;MACA;MACA;MACA;MACAA;IACA;IAEA;MACAC;QACAC;MACA;MAEAC;QACAC;QACAC;MACA;QACAD;QACAC;MACA;MAEA;MACAC;QACA;QACAR;UAAAS;UAAAC;UAAAC;QAAA;QACAC;UAAAH;UAAAC;UAAAC;QAAA;QACA;QACAP;UAAAK;UAAAI;UAAAF;QAAA;QACAG;UAAAL;UAAAI;UAAAF;QAAA;QACAI;UAAAN;UAAAI;UAAAF;QAAA;MACA;IACA;EACA;EAEAK;IACAC;MACA;QACA;UACAC;YACA;cACA;cACA;YACA;cACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","names":["name","data","callback","form","gender","options","value","label","rules","required","message","trigger","address","validator","email","phone_number","methods","save","request"],"sourceRoot":"src/views/user","sources":["Add.vue"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px;\">\r\n    <div style=\"font-size: 40px; font-family: Arial; margin-bottom: 5px\">Add New Member</div>\r\n    <div style=\" width: 60%\">\r\n      <!-- form area -->\r\n      <el-form :inline=\"true\" :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n        <el-form-item label=\"Name: \" style=\"margin-left: 2px\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"Enter name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Email: \" style=\"margin-left: 2px\" prop=\"email\">\r\n          <el-input v-model=\"form.email\" placeholder=\"Enter email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"User ID: \" style=\"margin-left: 2px\">\r\n          <el-input placeholder=\"--Generate after submission--\" :disabled=\"true\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Phone: \" style=\"margin-left: 2px\" prop=\"phone_number\">\r\n          <el-input v-model=\"form.phone_number\" placeholder=\"Enter phone number\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"Gender: \" style=\"margin-left: 2px\" prop=\"gender\">\r\n          <el-select v-model=\"form.gender\" placeholder=\"Please select a gender\">\r\n            <el-option\r\n                v-for=\"item in options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"Alamat: \" style=\"margin-left: 2px\" prop=\"address\">\r\n          <el-input v-model=\"form.address\" placeholder=\"Enter address\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- button area -->\r\n      <div style=\"text-align: center\">\r\n        <el-button type=\"primary\" style=\"margin-left: 2px; height: 40px; min-width: 100px\" @click=\"save\">Submit</el-button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\n\r\nexport default {\r\n  name: \"Add\",\r\n  data() {\r\n    const checkGender = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('Please enter gender'));\r\n      }\r\n      callback()\r\n    };\r\n\r\n    const checkEmail = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('Please enter the email address'))\r\n      }\r\n      if(!/^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/.test(value)) {\r\n        callback(new Error('Illegal email address'))\r\n      }\r\n      callback()\r\n    };\r\n\r\n    const checkPhone = (rule, value, callback) => {\r\n      if(!value) {\r\n        callback(new Error('Please enter the phone number'))\r\n      }\r\n      // if (!/^[1,2,3,4,5,6,7,8,9][0-9]{9}$/.test(value)) {\r\n      //   callback(new Error('Illegal phone number'));\r\n      // }\r\n      callback()\r\n    }\r\n\r\n    return {\r\n      form: {\r\n        gender: '',\r\n      },\r\n\r\n      options: [{\r\n        value: 'L',\r\n        label: 'Laki-laki'\r\n      }, {\r\n        value: 'P',\r\n        label: 'Perempuan'\r\n      }],\r\n\r\n      // rules to check the input values\r\n      rules: {\r\n        // cannot be empty\r\n        name: [{ required: true, message: 'Please enter the name', trigger: 'blur' }],\r\n        address: [{ required: true, message: 'Please enter the address', trigger: 'blur' }],\r\n        // more restrictions\r\n        gender:[{ required: true, validator: checkGender, trigger: 'blur' }],\r\n        email:[{ required: true, validator: checkEmail, trigger: 'blur' }],\r\n        phone_number:[{ required: true, validator: checkPhone, trigger: 'blur' }]\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    save() {\r\n      this.$refs['ruleForm'].validate((valid) => {\r\n        if(valid) {\r\n          request.post('api/member', this.form).then(res => {\r\n            if(res.code == '200') {\r\n              this.$notify.success('Submitted')\r\n              this.$refs['ruleForm'].resetFields()\r\n            } else {\r\n              this.$notify.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}